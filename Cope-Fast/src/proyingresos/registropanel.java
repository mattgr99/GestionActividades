/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyingresos;

import Atxy2k.CustomTextField.RestrictedTextField;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.plaf.RootPaneUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author matgr
 */
public class registropanel extends javax.swing.JPanel {

    /**
     * Creates new form registropanel
     */
    //DefaultTableModel modelo = new DefaultTableModel();
    public registropanel() {
        initComponents();
        txtId.setVisible(false);
        RestrictedTextField r = new RestrictedTextField(txtcedula);
        //RestrictedTextField p=new RestrictedTextField(txtClave);
        // RestrictedTextField n=new RestrictedTextField(txttelefono);
        RestrictedTextField m = new RestrictedTextField(txtnac);
        r.setLimit(10);
        //r.setOnlyNums(true);
        //n.setLimit(10);
        //n.setOnlyNums(true);
        // p.setLimit(10);
        //p.setOnlyNums(true);
        m.setLimit(10);
        tabla();
        bajas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbocomp = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        JTPusuarios = new javax.swing.JTabbedPane();
        JPNregistrar = new javax.swing.JPanel();
        lblCedula = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        LBLltipoChofer = new javax.swing.JLabel();
        lblDisco = new javax.swing.JLabel();
        lblFechaNac = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        txtnac = new javax.swing.JTextField();
        txtdisco = new javax.swing.JTextField();
        txtcedula = new javax.swing.JTextField();
        cbochofer = new javax.swing.JComboBox<>();
        JBTguardar = new javax.swing.JButton();
        lblFechaNac1 = new javax.swing.JLabel();
        txttelefono = new javax.swing.JTextField();
        LBLltipoChofer1 = new javax.swing.JLabel();
        cboestado = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        txtId = new javax.swing.JTextField();
        Modificar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        lblFechaNac2 = new javax.swing.JLabel();
        JPNbuscar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablausuarios = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablausuarios1 = new javax.swing.JTable();
        LBLusuarios = new javax.swing.JLabel();

        cbocomp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbocompActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        JPNregistrar.setBackground(new java.awt.Color(255, 255, 255));

        lblCedula.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblCedula.setText("#CÃ©dula:");

        jLabel3.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        LBLltipoChofer.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        LBLltipoChofer.setText("Tipo:");

        lblDisco.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblDisco.setText("#Disco:");

        lblFechaNac.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblFechaNac.setText("Fecha Nacimiento:");

        txtnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnombreActionPerformed(evt);
            }
        });
        txtnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnombreKeyTyped(evt);
            }
        });

        txtnac.setToolTipText("AAAA-MM-DD");
        txtnac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnacActionPerformed(evt);
            }
        });
        txtnac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnacKeyTyped(evt);
            }
        });

        txtdisco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdiscoActionPerformed(evt);
            }
        });

        txtcedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcedulaActionPerformed(evt);
            }
        });
        txtcedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcedulaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcedulaKeyTyped(evt);
            }
        });

        cbochofer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "socio", "chofer" }));

        JBTguardar.setText("Registrar");
        JBTguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTguardarActionPerformed(evt);
            }
        });

        lblFechaNac1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblFechaNac1.setText("Telefono:");

        txttelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttelefonoActionPerformed(evt);
            }
        });
        txttelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txttelefonoKeyTyped(evt);
            }
        });

        LBLltipoChofer1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        LBLltipoChofer1.setText("Estado:");

        cboestado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "Activo", "Suspendido" }));

        jLabel1.setText("Ingrese el numero de cedula del usuario:");

        txtClave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClaveKeyTyped(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtId.setBackground(java.awt.SystemColor.control);
        txtId.setForeground(new java.awt.Color(255, 255, 255));
        txtId.setCaretColor(new java.awt.Color(255, 255, 255));
        txtId.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtId.setEnabled(false);

        Modificar.setText("Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        eliminar.setText("Dar de baja");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        jButton1.setText("!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblFechaNac2.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblFechaNac2.setText("AAAA-MM-DD");

        javax.swing.GroupLayout JPNregistrarLayout = new javax.swing.GroupLayout(JPNregistrar);
        JPNregistrar.setLayout(JPNregistrarLayout);
        JPNregistrarLayout.setHorizontalGroup(
            JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPNregistrarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBuscar)
                .addGap(87, 87, 87))
            .addGroup(JPNregistrarLayout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(JBTguardar)
                .addGap(59, 59, 59)
                .addComponent(Modificar)
                .addGap(76, 76, 76)
                .addComponent(eliminar)
                .addContainerGap(169, Short.MAX_VALUE))
            .addGroup(JPNregistrarLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFechaNac1)
                    .addComponent(lblCedula)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LBLltipoChofer)
                    .addComponent(lblDisco)
                    .addComponent(LBLltipoChofer1)
                    .addComponent(lblFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtcedula, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbochofer, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdisco, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboestado, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnac, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPNregistrarLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(40, 40, 40)
                        .addComponent(lblFechaNac2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPNregistrarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        JPNregistrarLayout.setVerticalGroup(
            JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPNregistrarLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPNregistrarLayout.createSequentialGroup()
                        .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFechaNac1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txttelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtnac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(lblFechaNac2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbochofer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LBLltipoChofer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtdisco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboestado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LBLltipoChofer1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBTguardar)
                    .addComponent(Modificar)
                    .addComponent(eliminar))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        JTPusuarios.addTab("Registrar", JPNregistrar);

        JPNbuscar.setBackground(new java.awt.Color(255, 255, 255));

        tablausuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablausuarios.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tablausuarios);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Socios habilitados");

        javax.swing.GroupLayout JPNbuscarLayout = new javax.swing.GroupLayout(JPNbuscar);
        JPNbuscar.setLayout(JPNbuscarLayout);
        JPNbuscarLayout.setHorizontalGroup(
            JPNbuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPNbuscarLayout.createSequentialGroup()
                .addGroup(JPNbuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPNbuscarLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPNbuscarLayout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        JPNbuscarLayout.setVerticalGroup(
            JPNbuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPNbuscarLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        JTPusuarios.addTab("Socios habilitados", JPNbuscar);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("Socios dados de baja");

        tablausuarios1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablausuarios1.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(tablausuarios1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(252, 252, 252)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        JTPusuarios.addTab("Socios dados de baja", jPanel2);

        LBLusuarios.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        LBLusuarios.setText("Socios");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(292, 292, 292)
                .addComponent(LBLusuarios)
                .addContainerGap(357, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JTPusuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(LBLusuarios)
                .addGap(54, 54, 54)
                .addComponent(JTPusuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 765, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombreActionPerformed

    private void txtnacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnacActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnacActionPerformed

    private void txtdiscoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdiscoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdiscoActionPerformed

    private void txtcedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcedulaActionPerformed

    private void JBTguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTguardarActionPerformed
        PreparedStatement ps = null;
        int num, contador = 1;
        String fa = txtnac.getText();
        String[] partesfa = fa.split("-");
        int an;
        String comp = txtId.getText();
        System.out.println(comp);
        if ("".equals(fa)) {
            an = 1960;
        }

        //int Fila = tablausuarios.getSelectedRow();
        String comp1 = "";
        System.out.println(comp);
        if ("".equals(comp)) {
            comp = ".";
        }
        if ((comp1.equals(txtcedula.getText())) || (comp1.equals(txtnombre.getText())) || (comp1.equals(txttelefono.getText())) || (comp1.equals(txtnac.getText())) || (comp1.equals(txtdisco.getText()))) {
            JOptionPane.showMessageDialog(null, "Porfavor llene todos los campos");
        } else {
            if ((comp.equals(txtcedula.getText()))) {
                JOptionPane.showMessageDialog(null, "El usuario ya se encuentra registrado");
            } else {
                num = Integer.parseInt(txtcedula.getText());
                while (num / 10 > 0) {
                    num = num / 10;
                    contador++;
                }
                an = Integer.parseInt(partesfa[0]);
                if (((an > 1959) && (an < 2000)) && (contador == 10)) {
                    try {
                        Conexion objCon = new Conexion();
                        Connection conn = objCon.getConexion();
                        ps = conn.prepareStatement("INSERT INTO registro (cedula, nombre, telefono, tipo_socio,fecha_nacimiento,disco,estado) VALUES (?,?,?,?,?,?,?)");
                        ps.setString(1, txtcedula.getText());
                        ps.setString(2, txtnombre.getText());

                        ps.setString(3, txttelefono.getText());
                        ps.setString(4, cbochofer.getSelectedItem().toString());
                        ps.setString(5, txtnac.getText());
                        ps.setString(6, txtdisco.getText());
                        ps.setString(7, cboestado.getSelectedItem().toString());

                        ps.execute();
                        JOptionPane.showMessageDialog(null, "Socio Registrado");

                        limpiar();

                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Error al registrar socio\n(Formato fecha:AAAA-MM-DD)");
                        System.out.println(ex);
                    }
                } else {
                    if (an <= 1959) {
                        JOptionPane.showMessageDialog(null, "El socio no puede tener \nuna edad mayor a 59 aÃ±os");
                    }
                    if (contador != 10) {
                        JOptionPane.showMessageDialog(null, "La cÃ©dula debe tener 10 dÃ­gitos");
                    }
                }

            }

            tabla();

        }
    }//GEN-LAST:event_JBTguardarActionPerformed

    private void txttelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttelefonoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        RestrictedTextField r = new RestrictedTextField(txtcedula);
        //   RestrictedTextField p=new RestrictedTextField(txtClave);

        // p.setLimit(10);
        //p.setOnlyNums(true);
        PreparedStatement ps = null;
        ResultSet rs = null;
        Conexion conn = new Conexion();

        try {

            java.sql.Connection con = conn.getConexion();
            ps = con.prepareStatement("SELECT * FROM registro WHERE cedula = ?");
            ps.setString(1, txtClave.getText());

            rs = ps.executeQuery();

            if (rs.next()) {
                txtcedula.setText(rs.getString("cedula"));
                txtnombre.setText(rs.getString("nombre"));
                txttelefono.setText(rs.getString("telefono"));
                cboestado.setSelectedItem(rs.getString("estado"));
                cbocomp.setSelectedItem(rs.getString("cedula"));
                cbochofer.setSelectedItem(rs.getString("tipo_socio"));
                txtnac.setText(rs.getString("fecha_nacimiento"));
                txtdisco.setText(rs.getString("disco"));
                txtId.setText(txtClave.getText());

            } else {
                JOptionPane.showMessageDialog(null, "Usuario no encontrado");
            }

        } catch (Exception e) {
            System.err.println(e);
        }

        txtClave.setText("");

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        // Conexion conn = new Conexion();
        PreparedStatement ps = null;
        int Fila = tablausuarios.getSelectedRow();
        if (("".equals(txtcedula.getText())) || ("".equals(txtnombre.getText())) || ("".equals(txttelefono.getText())) || ("".equals(txtnac.getText())) || ("".equals(txtdisco.getText()))) {
            JOptionPane.showMessageDialog(null, "Todos los campos deben estar llenos");
        } else {
            try {
                Conexion objCon = new Conexion();
                com.mysql.jdbc.Connection conn = objCon.getConexion();

                ps = conn.prepareStatement("UPDATE registro SET nombre=?, telefono=?,tipo_socio =?,fecha_nacimiento=?, disco=?, estado=? WHERE cedula=?");
                ps.setString(1, txtnombre.getText());
                ps.setString(2, txttelefono.getText());
                ps.setString(3, cbochofer.getSelectedItem().toString());
                ps.setString(4, txtnac.getText());
                ps.setString(5, txtdisco.getText());
                ps.setString(6, cboestado.getSelectedItem().toString());
                ps.setString(7, txtcedula.getText());
                ps.execute();
                JOptionPane.showMessageDialog(null, "Usuario Modificado");

                limpiar();

                //   conn.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al Modificar usuario");
                System.err.println(ex);
            }
        }
        tabla();
    }//GEN-LAST:event_ModificarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        PreparedStatement ps = null;
        // txtId.setText("");
        int Fila = tablausuarios.getSelectedRow();
        String comp = txtId.getText();
        try {

            Conexion objCon = new Conexion();
            com.mysql.jdbc.Connection conn = objCon.getConexion();
            ps = conn.prepareStatement("DELETE FROM registro WHERE cedula=?");
            ps.setString(1, txtcedula.getText());
            ps.execute();
            if ("".equals(comp)) {
                JOptionPane.showMessageDialog(null, "No se ha seleccionado ningun usuario");
            } else {
                JOptionPane.showMessageDialog(null, "Usuario Dado de baja");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al dar de baja");
            System.out.println(ex.toString());
        }
        ps = null;
        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();
            ps = conn.prepareStatement("INSERT INTO tabla_registro (cedula, nombre, telefono, tipo_socio,fecha_nacimiento,disco,estado) VALUES (?,?,?,?,?,?,?)");
            ps.setString(1, txtcedula.getText());
            ps.setString(2, txtnombre.getText());

            ps.setString(3, txttelefono.getText());
            ps.setString(4, cbochofer.getSelectedItem().toString());
            ps.setString(5, txtnac.getText());
            ps.setString(6, txtdisco.getText());
            ps.setString(7, "Dado de baja");

            ps.execute();
            //JOptionPane.showMessageDialog(null, "Usuario Registrado")
            limpiar();

        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(null, "Error al registrar usuario");
            System.out.println(ex);
        }
        tabla();
        bajas();
        limpiar();
    }//GEN-LAST:event_eliminarActionPerformed

    private boolean validaIngresos(java.awt.event.KeyEvent evt, int num) {

        char validar = evt.getKeyChar();
        if (num == 1) {
            if (Character.isDigit(validar)) {
                getToolkit().beep();
                evt.consume();
                return true;
            }
        } else {
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                return true;
            }
        }

        return false;
    }

    private void txtClaveKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClaveKeyTyped

        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }

    }//GEN-LAST:event_txtClaveKeyTyped

    private void txtnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnombreKeyTyped

        if (validaIngresos(evt, 1)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta numeros");
        }
    }//GEN-LAST:event_txtnombreKeyTyped

    private void txtcedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcedulaKeyTyped

        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }
    }//GEN-LAST:event_txtcedulaKeyTyped

    private void txttelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttelefonoKeyTyped
        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }
    }//GEN-LAST:event_txttelefonoKeyTyped

    private void txtnacKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnacKeyTyped
        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }


    }//GEN-LAST:event_txtnacKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JOptionPane.showMessageDialog(null, "Debe ingresar en el formato AAAA-MM-DD");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbocompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbocompActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbocompActionPerformed

    private void txtcedulaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcedulaKeyReleased
        PreparedStatement ps = null;
        ResultSet rs = null;
        Conexion conn = new Conexion();

        try {

            java.sql.Connection con = conn.getConexion();
            ps = con.prepareStatement("SELECT * FROM registro WHERE cedula = ?");
            ps.setString(1, txtcedula.getText());

            rs = ps.executeQuery();

            if (rs.next()) {

                txtId.setText(txtcedula.getText());

            } else {
                //JOptionPane.showMessageDialog(null, "Usuario no encontrado");
            }

        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_txtcedulaKeyReleased
    public void bajas() {
        DefaultTableModel modelo1 = new DefaultTableModel();
        try {
            tablausuarios1.setModel(modelo1);
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            java.sql.Connection con = conn.getConexion();

            String sql = "SELECT cedula, nombre, telefono, tipo_socio,fecha_nacimiento,disco,estado FROM tabla_registro";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            int cantidadColumnas1 = rsMd.getColumnCount();

            modelo1.addColumn("Cedula");
            modelo1.addColumn("Nombre");
            modelo1.addColumn("Telefono");
            modelo1.addColumn("Tipo chofer");
            modelo1.addColumn("Fecha de nacimiento");
            modelo1.addColumn("Disco");
            modelo1.addColumn("Estado");

            int[] anchos = {70, 100, 70, 100, 50, 25, 50};
            for (int i = 0; i < tablausuarios1.getColumnCount(); i++) {
                tablausuarios1.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }

            while (rs.next()) {
                Object[] filas1 = new Object[cantidadColumnas1];
                for (int i = 0; i < cantidadColumnas1; i++) {
                    filas1[i] = rs.getObject(i + 1);
                }
                modelo1.addRow(filas1);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }

    public void tabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        try {
            tablausuarios.setModel(modelo);
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            java.sql.Connection con = conn.getConexion();

            String sql = "SELECT cedula, nombre, telefono, tipo_socio,fecha_nacimiento,disco,estado FROM registro";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();

            modelo.addColumn("Cedula");
            modelo.addColumn("Nombre");
            modelo.addColumn("Telefono");
            modelo.addColumn("Tipo chofer");
            modelo.addColumn("Fecha de nacimiento");
            modelo.addColumn("Disco");
            modelo.addColumn("Estado");

            int[] anchos = {70, 100, 70, 100, 50, 25, 50};
            for (int i = 0; i < tablausuarios.getColumnCount(); i++) {
                tablausuarios.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }

            while (rs.next()) {
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                modelo.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }

    private void limpiar() {
        txtcedula.setText("");
        txtnombre.setText("");
        txttelefono.setText("");
        cboestado.setSelectedIndex(0);
        cbochofer.setSelectedIndex(0);
        txtnac.setText("");
        txtdisco.setText("");
        txtId.setText("");

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBTguardar;
    private javax.swing.JPanel JPNbuscar;
    private javax.swing.JPanel JPNregistrar;
    private javax.swing.JTabbedPane JTPusuarios;
    private javax.swing.JLabel LBLltipoChofer;
    private javax.swing.JLabel LBLltipoChofer1;
    private javax.swing.JLabel LBLusuarios;
    private javax.swing.JButton Modificar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JComboBox<String> cbochofer;
    private javax.swing.JComboBox<String> cbocomp;
    private javax.swing.JComboBox<String> cboestado;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblDisco;
    private javax.swing.JLabel lblFechaNac;
    private javax.swing.JLabel lblFechaNac1;
    private javax.swing.JLabel lblFechaNac2;
    private javax.swing.JTable tablausuarios;
    private javax.swing.JTable tablausuarios1;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtcedula;
    private javax.swing.JTextField txtdisco;
    private javax.swing.JTextField txtnac;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txttelefono;
    // End of variables declaration//GEN-END:variables
}
